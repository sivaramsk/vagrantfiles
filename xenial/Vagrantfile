# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  config.vm.box = "cdaf/UbuntuLVM"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is

  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  config.vm.synced_folder "./data", "/vagrant_data"

  config.persistent_storage.diskdevice = '/dev/sdb'
  config.persistent_storage.enabled = true
  config.persistent_storage.location = "./storage.vdi"
  config.persistent_storage.size = 50000
  config.persistent_storage.mountname = 'data'
  config.persistent_storage.filesystem = 'ext4'
  config.persistent_storage.mountpoint = '/mnt/data'
  config.persistent_storage.volgroupname = 'myvolgroup'

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
     vb.gui = false
     vb.cpus = 2
  
     # Customize the amount of memory on the VM:
     vb.memory = "4096"
  end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  config.vm.provision "shell", inline: <<-SHELL
     systemctl stop apt-daily.service
     systemctl kill --kill-who=all apt-daily.service
     # wait until `apt-get updated` has been killed
     while ! (systemctl list-units --all apt-daily.service | fgrep -q dead); do sleep 1; done

     apt-get update 
     apt-get dist-upgrade 
     apt-get install -y vim git tmux curl build-essential ccache tar wget git apt-transport-https ca-certificates software-properties-common openjdk-8-jdk autoconf libtool build-essential python-dev libcurl4-nss-dev libsasl2-dev libsasl2-modules maven libapr1-dev libsvn-dev zlib1g-dev dos2unix samba
     mkdir -p /home/ubuntu/.ccache
     echo "max_size = 5.0G" >> /home/vagrant/.ccache/.ccache
     echo "cache_dir = /mnt/data/.ccache" >> /home/vagrant/.ccache/.ccache
     curl -o /home/vagrant/.git-prompt.sh https://raw.githubusercontent.com/git/git/master/contrib/completion/git-prompt.sh
     curl -o /home/vagrant/.git-completion.bash https://raw.githubusercontent.com/git/git/master/contrib/completion/git-completion.bash
     mkdir -p /home/vagrant/.vim && curl -fLo /home/vagrant/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
     cp /vagrant_data/.vimrc /home/vagrant/
     cp /vagrant_data/.bashrc /home/vagrant/
     cp /vagrant_data/install-req-softwares.sh /home/vagrant/
     cp -r /vagrant_data/.ssh/id_rsa /vagrant_data/.ssh/id_rsa.pub /home/vagrant/.ssh/
     chmod 600 /home/vagrant/.ssh/id_rsa
     dos2unix /home/vagrant/.vimrc
     dos2unix /home/vagrant/.bashrc
     chown -R vagrant.vagrant /home/vagrant/.vimrc /home/vagrant/.bashrc /home/vagrant/.vim /home/vagrant/.ssh/*
     bash /home/vagrant/install-req-softwares.sh
  SHELL

end
